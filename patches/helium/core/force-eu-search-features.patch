--- a/chrome/browser/ui/webui/settings/settings_localized_strings_provider.cc
+++ b/chrome/browser/ui/webui/settings/settings_localized_strings_provider.cc
@@ -31,7 +31,6 @@
 #include "chrome/browser/profiles/profile_attributes_storage.h"
 #include "chrome/browser/profiles/profile_manager.h"
 #include "chrome/browser/profiles/profile_shortcut_manager.h"
-#include "chrome/browser/regional_capabilities/regional_capabilities_service_factory.h"
 #include "chrome/browser/signin/account_consistency_mode_manager.h"
 #include "chrome/browser/signin/account_consistency_mode_manager_factory.h"
 #include "chrome/browser/signin/chrome_signin_client_factory.h"
@@ -84,7 +83,6 @@
 #include "components/plus_addresses/grit/plus_addresses_strings.h"
 #include "components/plus_addresses/plus_address_service.h"
 #include "components/prefs/pref_service.h"
-#include "components/regional_capabilities/regional_capabilities_service.h"
 #include "components/safe_browsing/core/common/features.h"
 #include "components/safe_browsing/core/common/hashprefix_realtime/hash_realtime_utils.h"
 #include "components/saved_tab_groups/public/features.h"
@@ -2495,14 +2493,9 @@ void AddSearchStrings(content::WebUIData
   html_source->AddString("searchExplanationLearnMoreURL",
                          chrome::kOmniboxLearnMoreURL);
 
-  regional_capabilities::RegionalCapabilitiesService* regional_capabilities =
-      regional_capabilities::RegionalCapabilitiesServiceFactory::GetForProfile(
-          profile);
   html_source->AddLocalizedString(
       "searchEnginesSettingsDialogSubtitle",
-      regional_capabilities->IsInEeaCountry()
-          ? IDS_SEARCH_ENGINE_CHOICE_SETTINGS_SUBTITLE
-          : IDS_SEARCH_ENGINE_CHOICE_SETTINGS_SUBTITLE_NON_EEA);
+      IDS_SEARCH_ENGINE_CHOICE_SETTINGS_SUBTITLE_HELIUM);
 
   html_source->AddLocalizedString(
       "saveGuestChoiceText", IDS_SEARCH_ENGINE_CHOICE_GUEST_SESSION_CHECKBOX);
--- a/components/regional_capabilities/regional_capabilities_service.cc
+++ b/components/regional_capabilities/regional_capabilities_service.cc
@@ -164,6 +164,7 @@ std::pair<CountryId, LoadedCountrySource
 }
 
 const ProgramSettings* CountryIdToProgram(CountryId country_id) {
+  return &kWaffleSettings;
 #if BUILDFLAG(IS_IOS)
   // TODO(crbug.com/423883216): Update logic to support Android.
   if (IsInProgramRegion(Program::kTaiyaki, country_id)) {
@@ -258,6 +259,7 @@ bool RegionalCapabilitiesService::IsInSe
 }
 
 bool RegionalCapabilitiesService::IsInEeaCountry() {
+  return true;
   // Feature behaviour was directly based on the current country, as a
   // decentralised way to express a concept we are now framing as "program
   // settings". Here we check for the program reference directly as command line
--- a/components/regional_capabilities/regional_capabilities_utils.cc
+++ b/components/regional_capabilities/regional_capabilities_utils.cc
@@ -55,7 +55,7 @@ void ShufflePrepopulatedEngines(std::vec
 }  // namespace
 
 bool IsEeaCountry(country_codes::CountryId country_id) {
-  return kEeaChoiceCountriesIds.contains(country_id);
+  return true;
 }
 
 std::optional<SearchEngineCountryOverride> GetSearchEngineCountryOverride() {
--- a/components/search_engine_choice_strings.grdp
+++ b/components/search_engine_choice_strings.grdp
@@ -98,6 +98,10 @@
     These search engines are popular in your region
   </message>
 
+  <message name="IDS_SEARCH_ENGINE_CHOICE_SETTINGS_SUBTITLE_HELIUM" desc="This is the body text of a dialog where the user can change their default search engine. This string explains that the list of search engines is randomized (not in order of recommendation).">
+    This list of search engines is shown in random order.
+  </message>
+
   <message name="IDS_SEARCH_ENGINE_CHOICE_SETTINGS_ENTRY_POINT_SUBTITLE" desc="This string is body text of a Chrome setting that lets a user select the search engine that they want to use. (A search engine provides answers to search queries; this is different from a browser, which displays web pages. A search engine powers many experiences within a browser.) The string explains how a search engine will impact their experience in Chrome. The “Learn more” link opens a help center article about the default search engine.">
     The search engine you choose will be used for features like searching from the address bar and from images on web pages.
   </message>
