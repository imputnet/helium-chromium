--- a/ui/color/ref_color_mixer.cc
+++ b/ui/color/ref_color_mixer.cc
@@ -25,107 +25,107 @@ namespace ui {
 void AddBaselinePalette(ColorProvider* provider) {
   ColorMixer& mixer = provider->AddMixer();
   mixer[kColorRefPrimary0] = {SkColorSetRGB(0x00, 0x00, 0x00)};
-  mixer[kColorRefPrimary10] = {SkColorSetRGB(0x04, 0x1E, 0x49)};
-  mixer[kColorRefPrimary20] = {SkColorSetRGB(0x06, 0x2E, 0x6F)};
-  mixer[kColorRefPrimary25] = {SkColorSetRGB(0x07, 0x38, 0x88)};
-  mixer[kColorRefPrimary30] = {SkColorSetRGB(0x08, 0x42, 0xA0)};
-  mixer[kColorRefPrimary40] = {SkColorSetRGB(0x0B, 0x57, 0xD0)};
-  mixer[kColorRefPrimary50] = {SkColorSetRGB(0x1B, 0x6E, 0xF3)};
-  mixer[kColorRefPrimary60] = {SkColorSetRGB(0x4C, 0x8D, 0xF6)};
-  mixer[kColorRefPrimary70] = {SkColorSetRGB(0x7C, 0xAC, 0xF8)};
-  mixer[kColorRefPrimary80] = {SkColorSetRGB(0xA8, 0xC7, 0xFA)};
-  mixer[kColorRefPrimary90] = {SkColorSetRGB(0xD3, 0xE3, 0xFD)};
-  mixer[kColorRefPrimary95] = {SkColorSetRGB(0xEC, 0xF3, 0xFE)};
-  mixer[kColorRefPrimary99] = {SkColorSetRGB(0xFA, 0xFB, 0xFF)};
+  mixer[kColorRefPrimary10] = {SkColorSetRGB(0x00, 0x12, 0x56)};
+  mixer[kColorRefPrimary20] = {SkColorSetRGB(0x00, 0x23, 0x89)};
+  mixer[kColorRefPrimary25] = {SkColorSetRGB(0x02, 0x2C, 0xA3)};
+  mixer[kColorRefPrimary30] = {SkColorSetRGB(0x1A, 0x39, 0xAE)};
+  mixer[kColorRefPrimary40] = {SkColorSetRGB(0x39, 0x54, 0xC6)};
+  mixer[kColorRefPrimary50] = {SkColorSetRGB(0x54, 0x6E, 0xE1)};
+  mixer[kColorRefPrimary60] = {SkColorSetRGB(0x6F, 0x88, 0xFD)};
+  mixer[kColorRefPrimary70] = {SkColorSetRGB(0x94, 0xA6, 0xFF)};
+  mixer[kColorRefPrimary80] = {SkColorSetRGB(0xB9, 0xC3, 0xFF)};
+  mixer[kColorRefPrimary90] = {SkColorSetRGB(0xDD, 0xE1, 0xFF)};
+  mixer[kColorRefPrimary95] = {SkColorSetRGB(0xF0, 0xEF, 0xFF)};
+  mixer[kColorRefPrimary99] = {SkColorSetRGB(0xFE, 0xFB, 0xFF)};
   mixer[kColorRefPrimary100] = {SkColorSetRGB(0xFF, 0xFF, 0xFF)};
 
   mixer[kColorRefSecondary0] = {SkColorSetRGB(0x00, 0x00, 0x00)};
-  mixer[kColorRefSecondary10] = {SkColorSetRGB(0x00, 0x1D, 0x35)};
-  mixer[kColorRefSecondary12] = {SkColorSetRGB(0x00, 0x22, 0x38)};
-  mixer[kColorRefSecondary15] = {SkColorSetRGB(0x00, 0x28, 0x45)};
-  mixer[kColorRefSecondary20] = {SkColorSetRGB(0x00, 0x33, 0x55)};
-  mixer[kColorRefSecondary25] = {SkColorSetRGB(0x00, 0x3f, 0x66)};
-  mixer[kColorRefSecondary30] = {SkColorSetRGB(0x00, 0x4A, 0x77)};
-  mixer[kColorRefSecondary35] = {SkColorSetRGB(0x00, 0x57, 0x89)};
-  mixer[kColorRefSecondary40] = {SkColorSetRGB(0x00, 0x63, 0x9B)};
-  mixer[kColorRefSecondary50] = {SkColorSetRGB(0x04, 0x7D, 0xB7)};
-  mixer[kColorRefSecondary60] = {SkColorSetRGB(0x39, 0x98, 0xD3)};
-  mixer[kColorRefSecondary70] = {SkColorSetRGB(0x5A, 0xB3, 0xF0)};
-  mixer[kColorRefSecondary80] = {SkColorSetRGB(0x7F, 0xCF, 0xFF)};
-  mixer[kColorRefSecondary90] = {SkColorSetRGB(0xC2, 0xE7, 0xFF)};
-  mixer[kColorRefSecondary95] = {SkColorSetRGB(0xDF, 0xF3, 0xFF)};
-  mixer[kColorRefSecondary99] = {SkColorSetRGB(0xF7, 0xFC, 0xFF)};
+  mixer[kColorRefSecondary10] = {SkColorSetRGB(0x17, 0x1B, 0x2C)};
+  mixer[kColorRefSecondary12] = {SkColorSetRGB(0x1B, 0x1F, 0x30)};
+  mixer[kColorRefSecondary15] = {SkColorSetRGB(0x21, 0x25, 0x37)};
+  mixer[kColorRefSecondary20] = {SkColorSetRGB(0x2C, 0x2F, 0x42)};
+  mixer[kColorRefSecondary25] = {SkColorSetRGB(0x37, 0x3A, 0x4D)};
+  mixer[kColorRefSecondary30] = {SkColorSetRGB(0x42, 0x46, 0x59)};
+  mixer[kColorRefSecondary35] = {SkColorSetRGB(0x4E, 0x51, 0x65)};
+  mixer[kColorRefSecondary40] = {SkColorSetRGB(0x5A, 0x5D, 0x72)};
+  mixer[kColorRefSecondary50] = {SkColorSetRGB(0x73, 0x76, 0x8B)};
+  mixer[kColorRefSecondary60] = {SkColorSetRGB(0x8D, 0x8F, 0xA6)};
+  mixer[kColorRefSecondary70] = {SkColorSetRGB(0xA7, 0xAA, 0xC1)};
+  mixer[kColorRefSecondary80] = {SkColorSetRGB(0xC3, 0xC5, 0xDD)};
+  mixer[kColorRefSecondary90] = {SkColorSetRGB(0xDF, 0xE1, 0xF9)};
+  mixer[kColorRefSecondary95] = {SkColorSetRGB(0xF0, 0xEF, 0xFF)};
+  mixer[kColorRefSecondary99] = {SkColorSetRGB(0xFE, 0xFB, 0xFF)};
   mixer[kColorRefSecondary100] = {SkColorSetRGB(0xFF, 0xFF, 0xFF)};
 
   mixer[kColorRefTertiary0] = {SkColorSetRGB(0x00, 0x00, 0x00)};
-  mixer[kColorRefTertiary10] = {SkColorSetRGB(0x07, 0x27, 0x11)};
-  mixer[kColorRefTertiary20] = {SkColorSetRGB(0x0A, 0x38, 0x18)};
-  mixer[kColorRefTertiary30] = {SkColorSetRGB(0x0F, 0x52, 0x23)};
-  mixer[kColorRefTertiary40] = {SkColorSetRGB(0x14, 0x6C, 0x2E)};
-  mixer[kColorRefTertiary50] = {SkColorSetRGB(0x19, 0x86, 0x39)};
-  mixer[kColorRefTertiary60] = {SkColorSetRGB(0x1E, 0xA4, 0x46)};
-  mixer[kColorRefTertiary70] = {SkColorSetRGB(0x37, 0xBE, 0x5F)};
-  mixer[kColorRefTertiary80] = {SkColorSetRGB(0x6D, 0xD5, 0x8C)};
-  mixer[kColorRefTertiary90] = {SkColorSetRGB(0xC4, 0xEE, 0xD0)};
-  mixer[kColorRefTertiary95] = {SkColorSetRGB(0xE7, 0xF8, 0xED)};
-  mixer[kColorRefTertiary99] = {SkColorSetRGB(0xF2, 0xFF, 0xEE)};
+  mixer[kColorRefTertiary10] = {SkColorSetRGB(0x13, 0x1A, 0x33)};
+  mixer[kColorRefTertiary20] = {SkColorSetRGB(0x28, 0x2F, 0x49)};
+  mixer[kColorRefTertiary30] = {SkColorSetRGB(0x3E, 0x46, 0x61)};
+  mixer[kColorRefTertiary40] = {SkColorSetRGB(0x56, 0x5D, 0x7A)};
+  mixer[kColorRefTertiary50] = {SkColorSetRGB(0x6F, 0x76, 0x94)};
+  mixer[kColorRefTertiary60] = {SkColorSetRGB(0x88, 0x8F, 0xAE)};
+  mixer[kColorRefTertiary70] = {SkColorSetRGB(0xA3, 0xAA, 0xCA)};
+  mixer[kColorRefTertiary80] = {SkColorSetRGB(0xBE, 0xC5, 0xE6)};
+  mixer[kColorRefTertiary90] = {SkColorSetRGB(0xDC, 0xE1, 0xFF)};
+  mixer[kColorRefTertiary95] = {SkColorSetRGB(0xEF, 0xF0, 0xFF)};
+  mixer[kColorRefTertiary99] = {SkColorSetRGB(0xFE, 0xFB, 0xFF)};
   mixer[kColorRefTertiary100] = {SkColorSetRGB(0xFF, 0xFF, 0xFF)};
 
   mixer[kColorRefError0] = {SkColorSetRGB(0x00, 0x00, 0x00)};
-  mixer[kColorRefError10] = {SkColorSetRGB(0x41, 0x0E, 0x0B)};
-  mixer[kColorRefError20] = {SkColorSetRGB(0x60, 0x14, 0x10)};
-  mixer[kColorRefError30] = {SkColorSetRGB(0x8C, 0x1D, 0x18)};
-  mixer[kColorRefError40] = {SkColorSetRGB(0xB3, 0x26, 0x1E)};
-  mixer[kColorRefError50] = {SkColorSetRGB(0xDC, 0x36, 0x2E)};
-  mixer[kColorRefError60] = {SkColorSetRGB(0xE4, 0x69, 0x62)};
-  mixer[kColorRefError70] = {SkColorSetRGB(0xEC, 0x92, 0x8E)};
-  mixer[kColorRefError80] = {SkColorSetRGB(0xF2, 0xB8, 0xB5)};
-  mixer[kColorRefError90] = {SkColorSetRGB(0xF9, 0xDE, 0xDC)};
-  mixer[kColorRefError95] = {SkColorSetRGB(0xFC, 0xEE, 0xEE)};
-  mixer[kColorRefError99] = {SkColorSetRGB(0xFF, 0xFB, 0xF9)};
+  mixer[kColorRefError10] = {SkColorSetRGB(0x41, 0x00, 0x02)};
+  mixer[kColorRefError20] = {SkColorSetRGB(0x69, 0x00, 0x05)};
+  mixer[kColorRefError30] = {SkColorSetRGB(0x93, 0x00, 0x0A)};
+  mixer[kColorRefError40] = {SkColorSetRGB(0xBA, 0x1A, 0x1A)};
+  mixer[kColorRefError50] = {SkColorSetRGB(0xDE, 0x37, 0x30)};
+  mixer[kColorRefError60] = {SkColorSetRGB(0xFF, 0x54, 0x49)};
+  mixer[kColorRefError70] = {SkColorSetRGB(0xFF, 0x89, 0x7D)};
+  mixer[kColorRefError80] = {SkColorSetRGB(0xFF, 0xB4, 0xAB)};
+  mixer[kColorRefError90] = {SkColorSetRGB(0xFF, 0xDA, 0xD6)};
+  mixer[kColorRefError95] = {SkColorSetRGB(0xFF, 0xED, 0xEA)};
+  mixer[kColorRefError99] = {SkColorSetRGB(0xFF, 0xFB, 0xFF)};
   mixer[kColorRefError100] = {SkColorSetRGB(0xFF, 0xFF, 0xFF)};
 
   mixer[kColorRefNeutral0] = {SkColorSetRGB(0x00, 0x00, 0x00)};
-  mixer[kColorRefNeutral4] = {SkColorSetRGB(0x0E, 0x0E, 0x0F)};
-  mixer[kColorRefNeutral6] = {SkColorSetRGB(0x13, 0x13, 0x14)};
-  mixer[kColorRefNeutral8] = {SkColorSetRGB(0x16, 0x18, 0x18)};
-  mixer[kColorRefNeutral10] = {SkColorSetRGB(0x1F, 0x1F, 0x1F)};
-  mixer[kColorRefNeutral12] = {SkColorSetRGB(0x1F, 0x20, 0x20)};
-  mixer[kColorRefNeutral15] = {SkColorSetRGB(0x28, 0x28, 0x28)};
-  mixer[kColorRefNeutral17] = {SkColorSetRGB(0x2A, 0x2A, 0x2A)};
-  mixer[kColorRefNeutral20] = {SkColorSetRGB(0x30, 0x30, 0x30)};
-  mixer[kColorRefNeutral22] = {SkColorSetRGB(0x34, 0x35, 0x35)};
-  mixer[kColorRefNeutral24] = {SkColorSetRGB(0x39, 0x39, 0x39)};
-  mixer[kColorRefNeutral25] = {SkColorSetRGB(0x3c, 0x3c, 0x3c)};
-  mixer[kColorRefNeutral30] = {SkColorSetRGB(0x47, 0x47, 0x47)};
-  mixer[kColorRefNeutral40] = {SkColorSetRGB(0x5E, 0x5E, 0x5E)};
-  mixer[kColorRefNeutral50] = {SkColorSetRGB(0x75, 0x75, 0x75)};
-  mixer[kColorRefNeutral60] = {SkColorSetRGB(0x8F, 0x8F, 0x8F)};
-  mixer[kColorRefNeutral70] = {SkColorSetRGB(0xAB, 0xAB, 0xAB)};
-  mixer[kColorRefNeutral80] = {SkColorSetRGB(0xC7, 0xC7, 0xC7)};
-  mixer[kColorRefNeutral87] = {SkColorSetRGB(0xDA, 0xDA, 0xDA)};
-  mixer[kColorRefNeutral90] = {SkColorSetRGB(0xE3, 0xE3, 0xE3)};
-  mixer[kColorRefNeutral92] = {SkColorSetRGB(0xE9, 0xE8, 0xE8)};
-  mixer[kColorRefNeutral94] = {SkColorSetRGB(0xEF, 0xED, 0xED)};
-  mixer[kColorRefNeutral95] = {SkColorSetRGB(0xF2, 0xF2, 0xF2)};
-  mixer[kColorRefNeutral96] = {SkColorSetRGB(0xF4, 0xF3, 0xF2)};
-  mixer[kColorRefNeutral98] = {SkColorSetRGB(0xFA, 0xF9, 0xF8)};
-  mixer[kColorRefNeutral99] = {SkColorSetRGB(0xFD, 0xFC, 0xFB)};
+  mixer[kColorRefNeutral4] = {SkColorSetRGB(0x0C, 0x0E, 0x14)};
+  mixer[kColorRefNeutral6] = {SkColorSetRGB(0x11, 0x13, 0x19)};
+  mixer[kColorRefNeutral8] = {SkColorSetRGB(0x15, 0x17, 0x1E)};
+  mixer[kColorRefNeutral10] = {SkColorSetRGB(0x19, 0x1B, 0x22)};
+  mixer[kColorRefNeutral12] = {SkColorSetRGB(0x1D, 0x1F, 0x26)};
+  mixer[kColorRefNeutral15] = {SkColorSetRGB(0x24, 0x26, 0x2C)};
+  mixer[kColorRefNeutral17] = {SkColorSetRGB(0x28, 0x2A, 0x30)};
+  mixer[kColorRefNeutral20] = {SkColorSetRGB(0x2E, 0x30, 0x37)};
+  mixer[kColorRefNeutral22] = {SkColorSetRGB(0x33, 0x35, 0x3B)};
+  mixer[kColorRefNeutral24] = {SkColorSetRGB(0x37, 0x39, 0x40)};
+  mixer[kColorRefNeutral25] = {SkColorSetRGB(0x39, 0x3B, 0x42)};
+  mixer[kColorRefNeutral30] = {SkColorSetRGB(0x45, 0x46, 0x4D)};
+  mixer[kColorRefNeutral40] = {SkColorSetRGB(0x5D, 0x5E, 0x65)};
+  mixer[kColorRefNeutral50] = {SkColorSetRGB(0x75, 0x77, 0x7E)};
+  mixer[kColorRefNeutral60] = {SkColorSetRGB(0x8F, 0x90, 0x98)};
+  mixer[kColorRefNeutral70] = {SkColorSetRGB(0xAA, 0xAB, 0xB3)};
+  mixer[kColorRefNeutral80] = {SkColorSetRGB(0xC5, 0xC6, 0xCE)};
+  mixer[kColorRefNeutral87] = {SkColorSetRGB(0xD9, 0xD9, 0xE2)};
+  mixer[kColorRefNeutral90] = {SkColorSetRGB(0xE2, 0xE2, 0xEA)};
+  mixer[kColorRefNeutral92] = {SkColorSetRGB(0xE7, 0xE7, 0xF0)};
+  mixer[kColorRefNeutral94] = {SkColorSetRGB(0xED, 0xED, 0xF6)};
+  mixer[kColorRefNeutral95] = {SkColorSetRGB(0xF0, 0xF0, 0xF9)};
+  mixer[kColorRefNeutral96] = {SkColorSetRGB(0xF3, 0xF3, 0xFC)};
+  mixer[kColorRefNeutral98] = {SkColorSetRGB(0xFA, 0xF8, 0xFF)};
+  mixer[kColorRefNeutral99] = {SkColorSetRGB(0xFE, 0xFB, 0xFF)};
   mixer[kColorRefNeutral100] = {SkColorSetRGB(0xFF, 0xFF, 0xFF)};
 
   mixer[kColorRefNeutralVariant0] = {SkColorSetRGB(0x00, 0x00, 0x00)};
-  mixer[kColorRefNeutralVariant10] = {SkColorSetRGB(0x19, 0x1D, 0x1C)};
-  mixer[kColorRefNeutralVariant15] = {SkColorSetRGB(0x23, 0x27, 0x26)};
-  mixer[kColorRefNeutralVariant20] = {SkColorSetRGB(0x2D, 0x31, 0x2F)};
-  mixer[kColorRefNeutralVariant30] = {SkColorSetRGB(0x44, 0x47, 0x46)};
-  mixer[kColorRefNeutralVariant40] = {SkColorSetRGB(0x5C, 0x5F, 0x5E)};
-  mixer[kColorRefNeutralVariant50] = {SkColorSetRGB(0x74, 0x77, 0x75)};
-  mixer[kColorRefNeutralVariant60] = {SkColorSetRGB(0x8E, 0x91, 0x8F)};
-  mixer[kColorRefNeutralVariant70] = {SkColorSetRGB(0xA9, 0xAC, 0xAA)};
-  mixer[kColorRefNeutralVariant80] = {SkColorSetRGB(0xC4, 0xC7, 0xC5)};
-  mixer[kColorRefNeutralVariant90] = {SkColorSetRGB(0xE1, 0xE3, 0xE1)};
-  mixer[kColorRefNeutralVariant95] = {SkColorSetRGB(0xEF, 0xF2, 0xEF)};
-  mixer[kColorRefNeutralVariant99] = {SkColorSetRGB(0xFA, 0xFD, 0xFB)};
+  mixer[kColorRefNeutralVariant10] = {SkColorSetRGB(0x13, 0x1A, 0x33)};
+  mixer[kColorRefNeutralVariant15] = {SkColorSetRGB(0x1D, 0x25, 0x3E)};
+  mixer[kColorRefNeutralVariant20] = {SkColorSetRGB(0x28, 0x2F, 0x49)};
+  mixer[kColorRefNeutralVariant30] = {SkColorSetRGB(0x3E, 0x46, 0x61)};
+  mixer[kColorRefNeutralVariant40] = {SkColorSetRGB(0x56, 0x5D, 0x7A)};
+  mixer[kColorRefNeutralVariant50] = {SkColorSetRGB(0x6F, 0x76, 0x94)};
+  mixer[kColorRefNeutralVariant60] = {SkColorSetRGB(0x88, 0x8F, 0xAE)};
+  mixer[kColorRefNeutralVariant70] = {SkColorSetRGB(0xA3, 0xAA, 0xCA)};
+  mixer[kColorRefNeutralVariant80] = {SkColorSetRGB(0xBE, 0xC5, 0xE6)};
+  mixer[kColorRefNeutralVariant90] = {SkColorSetRGB(0xDC, 0xE1, 0xFF)};
+  mixer[kColorRefNeutralVariant95] = {SkColorSetRGB(0xEF, 0xF0, 0xFF)};
+  mixer[kColorRefNeutralVariant99] = {SkColorSetRGB(0xFE, 0xFB, 0xFF)};
   mixer[kColorRefNeutralVariant100] = {SkColorSetRGB(0xFF, 0xFF, 0xFF)};
 }
 
--- a/ui/color/sys_color_mixer.cc
+++ b/ui/color/sys_color_mixer.cc
@@ -80,11 +80,11 @@ void AddGrayscaleSysColorOverrides(Color
   mixer[kColorSysOnSurfacePrimary] = {dark_mode ? kColorRefNeutral90
                                                 : kColorRefNeutral10};
   mixer[kColorSysDivider] = {dark_mode ? kColorRefNeutral40
-                                       : kColorRefNeutral90};
+                                       : kColorRefNeutral92};
 
   // Chrome surfaces.
   mixer[kColorSysHeader] = {dark_mode ? kColorRefNeutral12
-                                      : kColorRefNeutral90};
+                                      : kColorRefNeutral92};
   mixer[kColorSysHeaderInactive] = {
       dark_mode ? AlphaBlend({kColorSysHeader}, {kColorRefNeutral25}, 0x99)
                 : AlphaBlend({kColorSysHeader}, {kColorRefNeutral98}, 0x48)};
--- a/ui/gfx/color_palette.h
+++ b/ui/gfx/color_palette.h
@@ -15,16 +15,16 @@ constexpr SkColor kPlaceholderColor = SK
 
 // The number refers to the shade of darkness. Each color in the MD
 // palette ranges from 050-900.
-constexpr SkColor kGoogleBlue050 = SkColorSetRGB(0xE8, 0xF0, 0xFE);
-constexpr SkColor kGoogleBlue100 = SkColorSetRGB(0xD2, 0xE3, 0xFC);
-constexpr SkColor kGoogleBlue200 = SkColorSetRGB(0xAE, 0xCB, 0xFA);
-constexpr SkColor kGoogleBlue300 = SkColorSetRGB(0x8A, 0xB4, 0xF8);
-constexpr SkColor kGoogleBlue400 = SkColorSetRGB(0x66, 0x9D, 0xF6);
-constexpr SkColor kGoogleBlue500 = SkColorSetRGB(0x42, 0x85, 0xF4);
-constexpr SkColor kGoogleBlue600 = SkColorSetRGB(0x1A, 0x73, 0xE8);
-constexpr SkColor kGoogleBlue700 = SkColorSetRGB(0x19, 0x67, 0xD2);
-constexpr SkColor kGoogleBlue800 = SkColorSetRGB(0x18, 0x5A, 0xBC);
-constexpr SkColor kGoogleBlue900 = SkColorSetRGB(0x17, 0x4E, 0xA6);
+constexpr SkColor kGoogleBlue050 = SkColorSetRGB(0xEF, 0xF5, 0xFF);
+constexpr SkColor kGoogleBlue100 = SkColorSetRGB(0xE3, 0xED, 0xFF);
+constexpr SkColor kGoogleBlue200 = SkColorSetRGB(0xCE, 0xDD, 0xFF);
+constexpr SkColor kGoogleBlue300 = SkColorSetRGB(0xB4, 0xC9, 0xFF);
+constexpr SkColor kGoogleBlue400 = SkColorSetRGB(0x97, 0xB1, 0xFF);
+constexpr SkColor kGoogleBlue500 = SkColorSetRGB(0x7A, 0x97, 0xFB);
+constexpr SkColor kGoogleBlue600 = SkColorSetRGB(0x5E, 0x7A, 0xE8);
+constexpr SkColor kGoogleBlue700 = SkColorSetRGB(0x43, 0x5B, 0xCD);
+constexpr SkColor kGoogleBlue800 = SkColorSetRGB(0x2C, 0x3D, 0xA9);
+constexpr SkColor kGoogleBlue900 = SkColorSetRGB(0x18, 0x20, 0x7C);
 
 constexpr SkColor kGoogleRed050 = SkColorSetRGB(0xFC, 0xE8, 0xE6);
 constexpr SkColor kGoogleRed100 = SkColorSetRGB(0xFA, 0xD2, 0xCF);
--- a/ui/webui/resources/cr_elements/cr_shared_vars.css
+++ b/ui/webui/resources/cr_elements/cr_shared_vars.css
@@ -9,25 +9,26 @@
 
 /* Common css variables for Material Design WebUI */
 html {
-  --google-blue-50-rgb: 232, 240, 254;  /* #e8f0fe */
+  --helium-blue: #4c66d9;
+  --google-blue-50-rgb: 239, 245, 255; /* #eff5ff */
   --google-blue-50: rgb(var(--google-blue-50-rgb));
-  --google-blue-100-rgb: 210, 227, 252;  /* #d2e3fc */
+  --google-blue-100-rgb: 227, 237, 255; /* #e3edff */
   --google-blue-100: rgb(var(--google-blue-100-rgb));
-  --google-blue-200-rgb: 174, 203, 250;  /* #aecbfa */
+  --google-blue-200-rgb: 206, 221, 255; /* #ceddff */
   --google-blue-200: rgb(var(--google-blue-200-rgb));
-  --google-blue-300-rgb: 138, 180, 248;  /* #8ab4f8 */
+  --google-blue-300-rgb: 180, 201, 255; /* #b4c9ff */
   --google-blue-300: rgb(var(--google-blue-300-rgb));
-  --google-blue-400-rgb: 102, 157, 246;  /* #669df6 */
+  --google-blue-400-rgb: 151, 177, 255; /* #97b1ff */
   --google-blue-400: rgb(var(--google-blue-400-rgb));
-  --google-blue-500-rgb: 66, 133, 244;  /* #4285f4 */
+  --google-blue-500-rgb: 122, 151, 251; /* #7a97fb */
   --google-blue-500: rgb(var(--google-blue-500-rgb));
-  --google-blue-600-rgb: 26, 115, 232;  /* #1a73e8 */
+  --google-blue-600-rgb: 94, 122, 232; /* #5e7ae8 */
   --google-blue-600: rgb(var(--google-blue-600-rgb));
-  --google-blue-700-rgb: 25, 103, 210;  /* #1967d2 */
+  --google-blue-700-rgb: 67, 91, 205; /* #435bcd */
   --google-blue-700: rgb(var(--google-blue-700-rgb));
-  --google-blue-800-rgb: 24, 90, 188;  /* #185abc */
+  --google-blue-800-rgb: 44, 61, 169; /* #2c3da9 */
   --google-blue-800: rgb(var(--google-blue-800-rgb));
-  --google-blue-900-rgb: 23, 78, 166;  /* #174ea6 */
+  --google-blue-900-rgb: 24, 32, 124; /* #18207c */
   --google-blue-900: rgb(var(--google-blue-900-rgb));
 
   --google-green-50-rgb: 230, 244, 234;  /* #e6f4ea */
@@ -236,14 +237,14 @@ html {
      the color pipeline. */
   --cr-fallback-color-outline: rgb(116, 119, 117);
 
-  --cr-fallback-color-primary: rgb(11, 87, 208);
+  --cr-fallback-color-primary: var(--helium-blue);
   --cr-fallback-color-on-primary: rgb(255, 255, 255);
 
-  --cr-fallback-color-primary-container: rgb(211, 227, 253);
-  --cr-fallback-color-on-primary-container: rgb(4, 30, 73);
+  --cr-fallback-color-primary-container: var(--google-blue-200);
+  --cr-fallback-color-on-primary-container: var(--google-blue-900);
 
-  --cr-fallback-color-secondary-container: rgb(194, 231, 255);
-  --cr-fallback-color-on-secondary-container: rgb(0, 29, 53);
+  --cr-fallback-color-secondary-container: var(--google-blue-300);
+  --cr-fallback-color-on-secondary-container: var(--google-blue-900);
 
   --cr-fallback-color-neutral-container: rgb(242, 242, 242);
   --cr-fallback-color-neutral-outline: rgb(199, 199, 199);
@@ -260,18 +261,18 @@ html {
 
   --cr-fallback-color-on-surface-subtle: rgb(71, 71, 71);
 
-  --cr-fallback-color-inverse-primary: rgb(168, 199, 250);
+  --cr-fallback-color-inverse-primary: var(--google-blue-400);
   --cr-fallback-color-inverse-surface: rgb(48, 48, 48);
   --cr-fallback-color-inverse-on-surface: rgb(242, 242, 242);
 
-  --cr-fallback-color-tonal-container: rgb(211, 227, 253);
-  --cr-fallback-color-on-tonal-container: rgb(4, 30, 73);
+  --cr-fallback-color-tonal-container: var(--google-blue-200);
+  --cr-fallback-color-on-tonal-container: var(--google-blue-900);
 
-  --cr-fallback-color-tonal-outline: rgb(168, 199, 250);
+  --cr-fallback-color-tonal-outline: var(--google-blue-400);
 
   --cr-fallback-color-error: rgb(179, 38, 30);
 
-  --cr-fallback-color-divider: rgb(211, 227, 253);
+  --cr-fallback-color-divider: var(--google-blue-200);
 
   --cr-fallback-color-state-hover-on-prominent_: rgba(253, 252, 251, .1);
 
@@ -284,7 +285,7 @@ html {
   --cr-fallback-color-state-ripple-primary_: rgba(
       var(--cr-fallback-color-state-ripple-primary-rgb_), 0.32);
 
-  --cr-fallback-color-base-container: rgb(236, 239, 247);
+  --cr-fallback-color-base-container: var(--google-grey-100);
 
   --cr-fallback-color-disabled-background: rgba(
       var(--cr-fallback-color-on-surface-rgb), .12);
@@ -339,12 +340,12 @@ html {
   html {
     /* Colors */
     --cr-fallback-color-outline: rgb(142, 145, 143);
-    --cr-fallback-color-primary: rgb(168, 199, 250);
-    --cr-fallback-color-on-primary: rgb(6, 46, 111);
-    --cr-fallback-color-primary-container: rgb(8, 66, 160);
-    --cr-fallback-color-on-primary-container: rgb(211, 227, 253);
-    --cr-fallback-color-secondary-container: rgb(0, 74, 119);
-    --cr-fallback-color-on-secondary-container: rgb(194, 231, 255);
+    --cr-fallback-color-primary: var(--google-blue-400);
+    --cr-fallback-color-on-primary: var(--google-blue-900);
+    --cr-fallback-color-primary-container: var(--helium-blue);
+    --cr-fallback-color-on-primary-container: var(--google-blue-100);
+    --cr-fallback-color-secondary-container: var(--google-blue-800);
+    --cr-fallback-color-on-secondary-container: var(--google-blue-500);
     --cr-fallback-color-neutral-container: rgb(40, 40, 40);
     --cr-fallback-color-neutral-outline: rgb(117, 117, 117);
     --cr-fallback-color-surface: rgb(31, 31, 31);
@@ -352,24 +353,24 @@ html {
     --cr-fallback-color-surface2: rgb(45, 47, 49);
     --cr-fallback-color-surface3: rgb(51, 52, 56);
     --cr-fallback-color-on-surface-rgb: 227, 227, 227;
-    --cr-fallback-color-surface-variant: rgb(68, 71, 70);
-    --cr-fallback-color-on-surface-variant: rgb(196, 199, 197);
+    --cr-fallback-color-surface-variant: rgb(68, 68, 68);
+    --cr-fallback-color-on-surface-variant: rgb(196, 199, 196);
     --cr-fallback-color-on-surface-subtle: rgb(199, 199, 199);
-    --cr-fallback-color-inverse-primary: rgb(11, 87, 208);
+    --cr-fallback-color-inverse-primary: var(--helium-blue);
     --cr-fallback-color-inverse-surface: rgb(227, 227, 227);
     --cr-fallback-color-inverse-on-surface: rgb(31, 31, 31);
-    --cr-fallback-color-tonal-container: rgb(0, 74, 119);
-    --cr-fallback-color-on-tonal-container: rgb(194, 231, 255);
-    --cr-fallback-color-tonal-outline: rgb(4, 125, 183);
+    --cr-fallback-color-tonal-container: var(--google-blue-800);
+    --cr-fallback-color-on-tonal-container: var(--google-blue-300);
+    --cr-fallback-color-tonal-outline: var(--google-blue-500);
     --cr-fallback-color-error: rgb(242, 184, 181);
     --cr-fallback-color-divider: rgb(94, 94, 94);
     --cr-fallback-color-state-hover-on-prominent_: rgba(31, 31, 31, .06);
-    --cr-fallback-color-state-on-subtle-rgb_: 253, 252, 251;
+    --cr-fallback-color-state-on-subtle-rgb_: var(--google-blue-50-rgb);
     --cr-fallback-color-state-hover-on-subtle_: rgba(
         var(--cr-fallback-color-state-on-subtle-rgb_), .10);
     --cr-fallback-color-state-ripple-neutral-on-subtle_: rgba(
         var(--cr-fallback-color-state-on-subtle-rgb_), .16);
-    --cr-fallback-color-state-ripple-primary-rgb_: 76, 141, 246;
+    --cr-fallback-color-state-ripple-primary-rgb_: var(--google-blue-500-rgb);
     --cr-fallback-color-base-container: rgba(40, 40, 40, 1);
   }
 }
--- a/ui/webui/resources/cr_components/theme_color_picker/color_utils.ts
+++ b/ui/webui/resources/cr_components/theme_color_picker/color_utils.ts
@@ -29,26 +29,26 @@ export const DARK_DEFAULT_COLOR: Color =
 };
 
 export const LIGHT_BASELINE_BLUE_COLOR: Color = {
-  background: {value: 0xff0b57d0},
-  foreground: {value: 0xffd3e3fd},
+  background: {value: 0xff4c66d9},
+  foreground: {value: 0xffdde1ff},
   base: {value: 0xffc7c7c7},
 };
 
 export const DARK_BASELINE_BLUE_COLOR: Color = {
-  background: {value: 0xffa8c7fa},
-  foreground: {value: 0xff0842a0},
+  background: {value: 0xffb9c3ff},
+  foreground: {value: 0xff314380},
   base: {value: 0xff757575},
 };
 
 export const LIGHT_BASELINE_GREY_COLOR: Color = {
-  background: {value: 0xff0b57d0},
-  foreground: {value: 0xffe3e3e3},
+  background: {value: 0xff4c66d9},
+  foreground: {value: 0xffe2e2eD},
   base: {value: 0xffc7c7c7},
 };
 
 export const DARK_BASELINE_GREY_COLOR: Color = {
-  background: {value: 0xffa8c7fa},
-  foreground: {value: 0xff474747},
+  background: {value: 0xffb9c3ff},
+  foreground: {value: 0xff484d5c},
   base: {value: 0xff757575},
 };
 
--- a/components/webui/flags/resources/app.css
+++ b/components/webui/flags/resources/app.css
@@ -18,14 +18,15 @@
   --ease-in-out: cubic-bezier(0.4, 0.0, 0.2, 1);
   --shadow-color: rgba(0, 0, 0, 0.1);
 
-  --google-blue-300-rgb: 138, 180, 248;
+  --google-blue-300-rgb: 180, 201, 255; /* #b4c9ff */
   --google-blue-300: rgb(var(--google-blue-300-rgb));
-  --google-blue-400: rgb(102, 157, 246);
-  --google-blue-500-rgb: 66, 133, 244;
+  --google-blue-400: rgb(151, 177, 255); /* #97b1ff */
+  --google-blue-500-rgb: 122, 151, 251; /* #7a97fb */
   --google-blue-500: rgb(var(--google-blue-500-rgb));
-  --google-blue-600-rgb: 26, 115, 232;
+  --google-blue-600-rgb: 94, 122, 232; /* #5e7ae8 */
   --google-blue-600: rgb(var(--google-blue-600-rgb));
-  --google-blue-700: rgb(25, 103, 210);
+  --google-blue-700: rgb(67, 91, 205); /* #435bcd */
+
   --google-grey-100: rgb(241, 243, 244);
   --google-grey-200-rgb: 232, 234, 237;
   --google-grey-200: rgb(var(--google-grey-200-rgb));
@@ -44,7 +45,7 @@
   --secondary-color: var(--google-grey-700);
   --warning-color: var(--google-red-700);
 
-  --focus-shadow-color: rgb(11, 87, 208);
+  --focus-shadow-color: rgb(76, 102, 217);
   --input-background: var(--google-grey-100);
   --link-color: var(--google-blue-700);
   --separator-color: rgba(0, 0, 0, .06);
@@ -60,7 +61,7 @@
     --secondary-color: var(--google-grey-500);
     --warning-color: var(--google-red-300);
 
-    --focus-shadow-color: rgb(168, 199, 250);
+    --focus-shadow-color: var(--google-blue-400);
     --input-background: rgba(0, 0, 0, .3);
     --link-color: var(--google-blue-300);
     --separator-color: rgba(255, 255, 255, .1);
