--- a/components/vector_icons/chat_spark.icon
+++ b/components/vector_icons/chat_spark.icon
@@ -30,19 +30,4 @@ R_V_LINE_TO, 4.51,
 R_CUBIC_TO, 0, 0.41, -0.15, 0.76, -0.45, 1.06,
 ARC_TO, 1.45, 1.45, 0, 0, 1, 16.5, 15,
 H_LINE_TO, 5,
-CLOSE,
-R_MOVE_TO, 3, -6,
-R_V_LINE_TO, -1.5,
-R_H_LINE_TO, 8,
-V_LINE_TO, 12,
-CLOSE,
-R_MOVE_TO, 0, -2.75,
-R_V_LINE_TO, -1.5,
-R_H_LINE_TO, 7,
-R_V_LINE_TO, 1.5,
-CLOSE,
-MOVE_TO, 5, 6.5,
-V_LINE_TO, 5,
-R_H_LINE_TO, 4,
-R_V_LINE_TO, 1.5,
 CLOSE
--- a/chrome/browser/ui/views/BUILD.gn
+++ b/chrome/browser/ui/views/BUILD.gn
@@ -35,6 +35,7 @@ component("views") {
     "//components/keep_alive_registry",
     "//components/lens",
     "//components/lens:buildflags",
+    "//components/search_engines",
     "//components/vector_icons",
     "//content/public/browser",
     "//printing/buildflags",
--- a/components/omnibox/browser/autocomplete_controller.h
+++ b/components/omnibox/browser/autocomplete_controller.h
@@ -36,6 +36,7 @@
 #include "components/omnibox/browser/open_tab_provider.h"
 #include "components/omnibox/browser/tab_group_provider.h"
 #include "components/optimization_guide/machine_learning_tflite_buildflags.h"
+#include "components/search_engines/template_url_bang_manager.h"
 #include "third_party/omnibox_proto/types.pb.h"
 
 class ClipboardProvider;
@@ -553,6 +554,8 @@ class AutocompleteController : public Au
   // A list of all providers.
   Providers providers_;
 
+  raw_ptr<Bangs::BangManager> bang_manager_ = Bangs::BangManager::GetInstance();
+
   raw_ptr<BookmarkProvider> bookmark_provider_;
 
   raw_ptr<HistoryQuickProvider> history_quick_provider_;
--- a/components/omnibox/browser/autocomplete_controller.cc
+++ b/components/omnibox/browser/autocomplete_controller.cc
@@ -94,6 +94,7 @@
 #include "components/optimization_guide/machine_learning_tflite_buildflags.h"
 #include "components/search_engines/search_engine_type.h"
 #include "components/search_engines/template_url.h"
+#include "components/search_engines/template_url_bang_manager.h"
 #include "components/search_engines/template_url_service.h"
 #include "components/search_engines/template_url_starter_pack_data.h"
 #include "components/strings/grit/components_strings.h"
@@ -1916,7 +1917,21 @@ void AutocompleteController::UpdateKeywo
           // - For contextual search matches, the description indicates the
           //   alternative UX because they're opened in the side panel.
           i->description = template_url->AdjustedShortNameForLocaleDirection();
-          if (is_contextual) {
+          if (template_url->bang_id() > 0) {
+            int description_template = -1;
+
+            switch (bang_manager_->GetCategoryForBang(template_url->bang_id())) {
+            case Bangs::BANG_CATEGORY_AI:
+              description_template = IDS_OMNIBOX_SELECTED_KEYWORD_ASK_TEXT;
+              break;
+            default:
+              description_template = IDS_AUTOCOMPLETE_SEARCH_DESCRIPTION;
+              break;
+            }
+
+            i->description = l10n_util::GetStringFUTF16(
+                description_template, i->description);
+          } else if (is_contextual) {
             i->description = l10n_util::GetStringUTF16(
                 IDS_AUTOCOMPLETE_SEARCH_IN_SIDE_PANEL_DESCRIPTION);
           } else if (template_url->is_ask_starter_pack()) {
--- a/components/omnibox/browser/keyword_provider.h
+++ b/components/omnibox/browser/keyword_provider.h
@@ -23,6 +23,7 @@
 #include "components/omnibox/browser/autocomplete_input.h"
 #include "components/omnibox/browser/autocomplete_provider.h"
 #include "components/omnibox/browser/keyword_extensions_delegate.h"
+#include "components/search_engines/template_url_bang_manager.h"
 #include "third_party/metrics_proto/omnibox_input_type.pb.h"
 
 class AutocompleteProviderClient;
@@ -117,6 +118,8 @@ class KeywordProvider : public Autocompl
   // Model for the keywords.
   raw_ptr<TemplateURLService, DanglingUntriaged> model_;
 
+  const raw_ptr<Bangs::BangManager> bang_manager_ = Bangs::BangManager::GetInstance();
+
   // Delegate to handle the extensions-only logic for KeywordProvider.
   // NULL when extensions are not enabled. May be NULL for tests.
   std::unique_ptr<KeywordExtensionsDelegate> extensions_delegate_;
--- a/components/omnibox/browser/keyword_provider.cc
+++ b/components/omnibox/browser/keyword_provider.cc
@@ -25,6 +25,7 @@
 #include "components/omnibox/browser/search_provider.h"
 #include "components/omnibox/common/omnibox_feature_configs.h"
 #include "components/search_engines/template_url.h"
+#include "components/search_engines/template_url_bang_manager.h"
 #include "components/search_engines/template_url_service.h"
 #include "components/search_engines/template_url_starter_pack_data.h"
 #include "components/strings/grit/components_strings.h"
@@ -427,8 +428,18 @@ void KeywordProvider::FillInUrlAndConten
                    GetTemplateURLService()->search_terms_data()) &&
                (turl->type() != TemplateURL::OMNIBOX_API_EXTENSION)) {
       // Substituting site search.
+      int empty_id = IDS_EMPTY_KEYWORD_VALUE;
+      if (turl->bang_id() > 0) {
+        switch (bang_manager_->GetCategoryForBang(turl->bang_id())) {
+        case Bangs::BANG_CATEGORY_AI:
+          empty_id = IDS_STARTER_PACK_PAGE_EMPTY_QUERY_MATCH_TEXT;
+          break;
+        default:
+          break;
+        }
+      }
       match->contents.assign(
-          l10n_util::GetStringUTF16(IDS_EMPTY_KEYWORD_VALUE));
+          l10n_util::GetStringUTF16(empty_id));
       match->contents_class.emplace_back(0, ACMatchClassification::DIM);
     } else {
       // Keyword or extension that has no replacement text (aka a shorthand for
--- a/chrome/browser/ui/views/location_bar/selected_keyword_view.h
+++ b/chrome/browser/ui/views/location_bar/selected_keyword_view.h
@@ -9,6 +9,7 @@
 
 #include "base/memory/raw_ptr.h"
 #include "chrome/browser/ui/views/location_bar/icon_label_bubble_view.h"
+#include "components/search_engines/template_url_bang_manager.h"
 #include "third_party/skia/include/core/SkColor.h"
 #include "ui/base/metadata/metadata_header_macros.h"
 #include "ui/views/controls/label.h"
@@ -72,6 +73,8 @@ class SelectedKeywordView : public IconL
   // May be nullptr in tests.
   const raw_ptr<Profile> profile_;
 
+  const raw_ptr<Bangs::BangManager> bang_manager_ = Bangs::BangManager::GetInstance();
+
   // The keyword we're showing. If empty, no keyword is selected.
   // NOTE: we don't cache the TemplateURL as it is possible for it to get
   // deleted out from under us.
--- a/chrome/browser/ui/views/location_bar/selected_keyword_view.cc
+++ b/chrome/browser/ui/views/location_bar/selected_keyword_view.cc
@@ -17,6 +17,7 @@
 #include "components/omnibox/browser/vector_icons.h"
 #include "components/search_engines/template_url_service.h"
 #include "components/search_engines/template_url_starter_pack_data.h"
+#include "components/search_engines/template_url_bang_manager.h"
 #include "components/strings/grit/components_strings.h"
 #include "components/vector_icons/vector_icons.h"
 #include "ui/accessibility/ax_enums.mojom.h"
@@ -114,6 +115,14 @@ void SelectedKeywordView::SetCustomImage
   } else if (template_url && template_url->starter_pack_id() ==
                                  template_url_starter_pack_data::kAiMode) {
     vector_icon = &omnibox::kSearchSparkIcon;
+  } else if (template_url && template_url->bang_id() > 0) {
+    switch (bang_manager_->GetCategoryForBang(template_url->bang_id())) {
+    case Bangs::BANG_CATEGORY_AI:
+      vector_icon = &vector_icons::kChatSparkIcon;
+      break;
+    default:
+      break;
+    }
   } else if (history_embeddings::IsHistoryEmbeddingsEnabledForProfile(
                  profile_) &&
              history_embeddings::GetFeatureParameters().omnibox_scoped &&
--- a/chrome/browser/ui/views/omnibox/omnibox_suggestion_button_row_view.cc
+++ b/chrome/browser/ui/views/omnibox/omnibox_suggestion_button_row_view.cc
@@ -24,6 +24,7 @@
 #include "components/omnibox/browser/omnibox_field_trial.h"
 #include "components/omnibox/browser/vector_icons.h"
 #include "components/omnibox/common/omnibox_feature_configs.h"
+#include "components/search_engines/template_url_bang_manager.h"
 #include "components/strings/grit/components_strings.h"
 #include "components/vector_icons/vector_icons.h"
 #include "third_party/metrics_proto/omnibox_event.pb.h"
@@ -527,6 +528,27 @@ void OmniboxSuggestionButtonRowView::Upd
       const auto names = SelectedKeywordView::GetKeywordLabelNames(
           keyword,
           popup_view_->controller()->client()->GetTemplateURLService());
+
+      const gfx::VectorIcon* icon = &vector_icons::kSearchChromeRefreshIcon;
+
+      if (AutocompleteMatch* associated_keyword = match().associated_keyword.get();
+          associated_keyword != nullptr) {
+        TemplateURL* turl = associated_keyword->GetTemplateURL(
+          popup_view_->controller()->client()->GetTemplateURLService(),
+          false
+        );
+        auto* bang_manager = Bangs::BangManager::GetInstance();
+
+        switch (bang_manager->GetCategoryForBang(turl ? turl->bang_id() : 0)) {
+          case Bangs::BANG_CATEGORY_AI:
+            icon = &vector_icons::kChatSparkIcon;
+            break;
+          default:
+            break;
+        }
+      }
+
+      keyword_button_->SetIcon(*icon);
       keyword_button_->SetText(names.full_name);
       keyword_button_->GetViewAccessibility().SetName(
           l10n_util::GetStringFUTF16(IDS_ACC_KEYWORD_MODE, names.short_name));
